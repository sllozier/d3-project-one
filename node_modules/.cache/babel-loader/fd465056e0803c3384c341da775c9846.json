{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/sarah/Fullstack_Stuff/SeniorPhase/playingAround/d3projects/d3Project1/d3-project-one/src/views/MultilineChart/MultilineChart.js\";\n\nimport React from 'react';\nimport { Line, Axis, GridLine, Area } from '../../components';\nimport useController from './MultilineChart.controller';\n\nvar MultilineChart = function MultilineChart(_ref) {\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      _ref$dimensions = _ref.dimensions,\n      dimensions = _ref$dimensions === void 0 ? {} : _ref$dimensions;\n  var width = dimensions.width,\n      height = dimensions.height,\n      _dimensions$margin = dimensions.margin,\n      margin = _dimensions$margin === void 0 ? {} : _dimensions$margin;\n  var svgWidth = width + margin.left + margin.right;\n  var svgHeight = height + margin.top + margin.bottom;\n  var controller = useController({\n    data: data,\n    width: width,\n    height: height\n  });\n  var yTickFormat = controller.yTickFormat,\n      xScale = controller.xScale,\n      yScale = controller.yScale,\n      yScaleForAxis = controller.yScaleForAxis;\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: svgWidth,\n    height: svgHeight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridLine, {\n    type: \"vertical\",\n    scale: xScale,\n    ticks: 5,\n    size: height,\n    transform: \"translate(0, \".concat(height, \")\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(GridLine, {\n    type: \"horizonal\",\n    scale: yScaleForAxis,\n    ticks: 2,\n    size: width,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(GridLine, {\n    type: \"horizonal\",\n    className: \"baseGridLine\",\n    scale: yScale,\n    ticks: 1,\n    size: width,\n    disableAnimation: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), data.map(function (_ref2) {\n    var name = _ref2.name,\n        _ref2$items = _ref2.items,\n        items = _ref2$items === void 0 ? [] : _ref2$items,\n        color = _ref2.color;\n    return /*#__PURE__*/React.createElement(Line, {\n      key: name,\n      data: items,\n      xScale: xScale,\n      yScale: yScale,\n      color: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Area, {\n    data: data[0].items,\n    color: data[0].color,\n    xScale: xScale,\n    yScale: yScale,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Axis, {\n    type: \"left\",\n    scale: yScaleForAxis,\n    transform: \"translate(50, -10)\",\n    ticks: 5,\n    tickFormat: yTickFormat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Axis, {\n    type: \"bottom\",\n    className: \"axisX\",\n    scale: xScale,\n    transform: \"translate(10, \".concat(height - height / 6, \")\"),\n    ticks: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MultilineChart;","map":{"version":3,"names":["React","Line","Axis","GridLine","Area","useController","MultilineChart","data","dimensions","width","height","margin","svgWidth","left","right","svgHeight","top","bottom","controller","yTickFormat","xScale","yScale","yScaleForAxis","map","name","items","color"],"sources":["/home/sarah/Fullstack_Stuff/SeniorPhase/playingAround/d3projects/d3Project1/d3-project-one/src/views/MultilineChart/MultilineChart.js"],"sourcesContent":["import React from 'react';\nimport { Line, Axis, GridLine, Area } from '../../components';\nimport useController from './MultilineChart.controller';\n\nconst MultilineChart = ({ data = [], dimensions = {} }) => {\n    const { width, height, margin = {} } = dimensions;\n    const svgWidth = width + margin.left + margin.right;\n    const svgHeight = height + margin.top + margin.bottom;\n    const controller = useController({ data, width, height });\n    const { yTickFormat, xScale, yScale, yScaleForAxis } = controller;\n\n    return (\n        <svg width={svgWidth} height={svgHeight}>\n            <g transform={`translate(${margin.left}, ${margin.top})`}>\n                <GridLine\n                type='vertical'\n                scale={xScale}\n                ticks={5}\n                size={height}\n                transform={`translate(0, ${height})`}\n                />\n                <GridLine\n                type='horizonal'\n                scale={yScaleForAxis}\n                ticks={2}\n                size={width}\n                />\n                <GridLine\n                type='horizonal'\n                className='baseGridLine'\n                scale={yScale}\n                ticks={1}\n                size={width}\n                disableAnimation\n                />\n                {data.map(({ name, items = [], color }) => (\n                    <Line\n                    key={name}\n                    data={items}\n                    xScale={xScale}\n                    yScale={yScale}\n                    color={color}\n                    />\n                ))}\n                <Area\n                data={data[0].items}\n                color={data[0].color}\n                xScale={xScale}\n                yScale={yScale}\n                />\n                <Axis\n                type='left'\n                scale={yScaleForAxis}\n                transform='translate(50, -10)'\n                ticks={5}\n                tickFormat={yTickFormat}\n                />\n                <Axis\n                type='bottom'\n                className='axisX'\n                scale={xScale}\n                transform={`translate(10, ${height - height / 6})`}\n                ticks={5}\n                />\n            </g>\n        </svg>\n    );\n};\n\nexport default MultilineChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}